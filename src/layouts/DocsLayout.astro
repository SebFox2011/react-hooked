---
import { ViewTransitions } from "astro:transitions";
import MobileNavbar from "@/components/nav/MobileNavbar.astro";
import Navbar from "@/components/nav/Navbar.astro";
import { getHooksNames, getTestNames } from "@/utils/hooks";
import MainNav from "@/components/nav/MainNav.astro";
import type { Hook } from "@/types/hook";

interface Props {
  title: string;
  selectedPage: string;
  description?: string;
}

const hookNames = getHooksNames();
const testNames = getTestNames();

const hooks: Hook[] = hookNames.map((name) => ({
  name,
  isTested: testNames.includes(name),
}));

const { title, selectedPage, description } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="stylesheet" href="/style.css" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <title>{title} - React Hooked ü™ù</title>
    {description && <meta name="description" content={description} />}
    <ViewTransitions />
  </head>
  <body class="ctp-latte bg-ctp-base text-ctp-text antialiased dark:ctp-mocha">
    <div class="">
      <div
        class="sticky top-0 z-50 border-b border-zinc-950/10 bg-ctp-mantle px-6 py-5 sm:px-8 lg:flex lg:h-16 lg:items-center lg:py-0"
      >
        <MainNav />
        <MobileNavbar items={hookNames} selectedPage={selectedPage} />
      </div>
      <div class="px-6 lg:px-8">
        <div class="mx-auto max-w-xl lg:max-w-7xl">
          <div class="mx-auto flex max-w-xl items-start gap-x-12 lg:max-w-7xl">
            <Navbar hooks={hooks} selectedPage={selectedPage} />
            <main class="min-w-0 flex-1 gap-x-12 pb-16 pt-8 lg:pt-12">
              <slot />
            </main>
          </div>
        </div>
        <article></article>
      </div>
    </div>
    <!-- <Footer /> -->
  </body>
</html>
